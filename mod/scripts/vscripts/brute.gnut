global function Brute_Init

void function Brute_Init() {
    PrecacheModel( $"models/titans/buddy/titan_buddy.mdl" )
	PrecacheModel( $"models/weapons/arms/buddypov.mdl" )
	PrecacheParticleSystem( $"P_BT_eye_SM" )

    #if SERVER
        AddCallback_OnPilotBecomesTitan( InvertTitanLoadout )
        // AddCallback_OnUpdateDerivedPlayerTitanLoadout( InvertTitanLoadoutOnLoadout )
    #endif
}

#if SERVER

    void function InvertTitanLoadout( entity player, entity titan )
{
        array<entity> weapons = player.GetMainWeapons()
        array<entity> offhand = player.GetOffhandWeapons()

        for (int i = 0; i < 5; i++)
        {
            switch ( offhand[i].GetWeaponClassName() )
            {
                // TONE
                case "mp_titanability_sonar_pulse":
                    player.TakeOffhandWeapon(i)
                    player.GiveOffhandWeapon( "mp_titanability_hover", OFFHAND_ANTIRODEO )
                    break;

                case "mp_titanweapon_tracker_rockets":
                    player.TakeOffhandWeapon(i)
                    player.GiveOffhandWeapon( "mp_titanweapon_shoulder_rockets", OFFHAND_ORDNANCE )
                    player.GetOffhandWeapons()[i].SetMods(["upgradeCore_MissileRack_Vanguard"])
                    break;

                case "mp_titanability_particle_wall":
                    player.TakeOffhandWeapon(i)
                    player.GiveOffhandWeapon( "mp_titanweapon_vortex_shield_ion", OFFHAND_SPECIAL )
                    break;
            }
        }

        if ( weapons[0].GetWeaponClassName() == "mp_titanweapon_sticky_40mm" )
        {
            player.TakeWeaponNow( weapons[0].GetWeaponClassName() )
            player.GiveWeapon( "mp_titanweapon_rocketeer_rocketstream" )
        }

        SendHudMessage( player, "Pilot loadout equipped!", -1, 0.4, 255, 255, 255, 255, 0.15, 3.0, 0.5 )


    }
#endif